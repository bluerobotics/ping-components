version: '{branch}-{build}'

init:
  # Create our AppVeyor version
  - ps: $env:commit = $env:appveyor_repo_commit.SubString(0,7)
  - ps: Update-AppveyorBuild -Version ("{0}-{1}-{2}" -f $env:appveyor_repo_branch,$env:appveyor_build_number,$env:commit )

os: Visual Studio 2019

environment:
  matrix:
    - MSVC_VERSION: 19
      RUNTIME_LINKAGE: static
      QT_VERSION: 5.15
      QT_LINKAGE: static
      COVERITY_BUILD_CANDIDATE: True
      QTDIR: C:\Qt\%QT_VERSION%\msvc2019_64
      OPENSSLDIR: C:\OpenSSL-v11-Win64\bin
      VCLIBS: VCRUNTIME140.dll MSVCP140.dll ucrtbased.dll

configuration:
  - release

install:
  # Set and load necessary variables
  - '%QTDIR%\bin\qtenv2.bat'
  - pip install jinja2
  - qmake -v
  - set VCLIBDIR=%WINDIR%\System32 # Find vclibs
  - set QTDIR
  - call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Auxiliary\Build\vcvarsall.bat" amd64

  # Travis and appveyor does not have compatible names to continuous release
  # - If building a tag: Upload the build using the tag name
  # - When building master: Upload the build to the continuous tag
  # - When building a branch: Upload using the branch name
  - if %APPVEYOR_REPO_TAG%==true (set RELEASE_NAME=%APPVEYOR_REPO_TAG_NAME%) else set RELEASE_NAME=continuous-%APPVEYOR_REPO_BRANCH%
  - if %RELEASE_NAME%==master (set RELEASE_NAME=continuous)

before_build:
  # Prepare the out-of-source build directory.
  - echo "RELEASE_NAME:" %RELEASE_NAME%
  - mkdir %APPVEYOR_BUILD_FOLDER%-build

build_script:
  # Compile it and check for .exe
  - cmake -S %APPVEYOR_BUILD_FOLDER% -B %APPVEYOR_BUILD_FOLDER%-build
  - cmake --build %APPVEYOR_BUILD_FOLDER%-build --config Release -j 2

after_build:
  # Add a link to the build output within the source directory. This is needed because AppVeyor does
  # not support extracting artifacts from out-of-source build directories. See 'artifacts' below.
  - mkdir deploy
  - copy "%APPVEYOR_BUILD_FOLDER%-build\Release\pingviewer.exe" "./deploy/pingviewer.exe"

  - windeployqt --qmldir %APPVEYOR_BUILD_FOLDER%/qml --release deploy/pingviewer.exe --verbose=2
  - for %%I in (%VCLIBS%) do copy %VCLIBDIR%\%%I deploy\
  # windeployqt do not deploy openssl binaries
  - copy %OPENSSLDIR%\*.dll deploy\
  - appveyor DownloadFile https://github.com/bluerobotics/stm32flash-code/releases/download/continuous/stm32flash.exe -FileName deploy/stm32flash.exe
  - 7z a -tzip pingviewer_%CONFIGURATION%.zip deploy -r
  - copy pingviewer_%CONFIGURATION%.zip %APPVEYOR_BUILD_FOLDER%

artifacts:
  - path: pingviewer_%CONFIGURATION%.zip
    name: PingViewer

deploy:
  - provider: GitHub
    tag: $(RELEASE_NAME)
    release: $(RELEASE_NAME)
    artifact: PingViewer
    draft: false
    prerelease: true
    auth_token:
      secure: VEF0yQnbTywsc88aRTZH8e1/Z0M7qf2txtidiB43qrSFTvrE/2nAQzGx+eqCBb9p

  - provider: S3
    access_key_id: AKIAI42TETMLX6KJRTRA
    secret_access_key:
      secure: H+6JLuM6RmVdlzvYZ92+E1+NB/Z4580IDd8m2wNCbSpFhzSewGtVk3M2AkjKTlCG
    bucket: downloads.bluerobotics.com
    region: us-east-1
    set_public: true
    folder: PingViewer/builds/$(RELEASE_NAME)
    artifact: PingViewer
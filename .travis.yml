sudo: false
language: cpp
python:
  - "3.6"
matrix:
  include:
    - os: linux
      dist: trusty
      sudo: require
      addons:
        apt:
          sources:
            - sourceline: 'ppa:cs50/ppa'
          packages:
            - astyle
      env:
        - DESC="Check code style"
        - TEST="true"

    - os: linux
      dist: xenial
      sudo: require
      addons:
        apt:
          sources:
            - sourceline: 'ppa:ubuntu-toolchain-r/test'
          packages:
            - g++-7
      env:
        - DESC="AppImage deploy"
        - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"
        - QTV="qt511"

    - os: linux
      dist: trusty
      sudo: require
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-7
      env:
        - DESC="AppImage deploy for QGC"
        - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"
        - QTV="qt59"

    - os: osx
      osx_image: xcode9.3
      compiler: clang
      env:
        - DESC="dmg deploy"
        - MATRIX_EVAL="COMPILER=clang++"

before_install:
- eval "${MATRIX_EVAL}"

install:
- if [ -z $TEST ]; then
    pip install --user --upgrade pip;
    pip install --user jinja2;
  fi
- if [[ "${TRAVIS_OS_NAME}" = "linux" && -z $TEST ]]; then
    if [ "${QTV}" = "qt59" ]; then
      sudo add-apt-repository --yes ppa:beineri/opt-qt594-trusty;
    else
      sudo add-apt-repository --yes ppa:beineri/opt-qt-5.11.0-xenial;
    fi;
    sudo apt update -qq;
    sudo apt search ${QTV};
    sudo apt install build-essential ${QTV}charts-no-lgpl
    ${QTV}quickcontrols ${QTV}quickcontrols2 ${QTV}serialport
    ${QTV}graphicaleffects ${QTV}svg ${QTV}scxml git;
    if [ "${QTV}" = "qt59" ]; then
      sudo apt install ${QTV}-meta-minimal;
    else
      sudo apt install ${QTV}base libgl1-mesa-dev;
    fi;
  fi
- if [ "${TRAVIS_OS_NAME}" = "osx" ]; then
    brew update > /dev/null;
    brew install qt5;
    chmod -R 755 /usr/local/opt/qt5/*;
    export QTDIR="/usr/local/opt/qt5";
    export PATH="$QTDIR/bin:$PATH";
  fi

script:
- if [ ! -z $TEST ]; then
    ./tools/astyle.sh;
    git diff;
    if ! git diff --quiet --ignore-submodules HEAD 2>/dev/null; then
      echo "Style error ! Run astyle in tools. (./tools/astyle.sh)";
      exit 1;
    fi;
  fi
- if [[ "${TRAVIS_OS_NAME}" = "linux" && -z $TEST ]]; then
    sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-7 60;
    g++ --version;
    source /opt/qt*/bin/qt*-env.sh;
    git submodule init;
    git submodule update;
    mkdir build;
    cd build;
    qmake ..;
    make || travis_terminate 1;
    mkdir deploy;
    ls ../qml/;
    ls ../qml/imgs;
    cp ../qml/imgs/pingviewer.png deploy/;
    cp ../deploy/pingviewer.desktop deploy/;
    mv pingviewer deploy/;
    wget https://github.com/bluerobotics/stm32flash-code/releases/download/continuous/stm32flash_linux.zip;
    unzip stm32flash_linux.zip;
    chmod +x stm32flash;
    mv stm32flash deploy/;
    ls deploy;
    wget -c "https://github.com/probonopd/linuxdeployqt/releases/download/continuous/linuxdeployqt-continuous-x86_64.AppImage";
    chmod a+x linuxdeployqt*.AppImage;
    unset QTDIR; unset QT_PLUGIN_PATH ; unset LD_LIBRARY_PATH;
    ./linuxdeployqt*.AppImage deploy/pingviewer -verbose=2 -qmldir=../qml -bundle-non-qt-libs -extra-plugins=imageformats/libqsvg.so;
    ./linuxdeployqt*.AppImage deploy/pingviewer.desktop -verbose=2 -qmldir=../qml -appimage;
    find . | grep AppImage;
    if [ "${QTV}" = "qt59" ]; then
      mv pingviewer-x86_64.AppImage ./pingviewer-x86_64_QGC.AppImage;
    fi;
  fi
- if [ "${TRAVIS_OS_NAME}" = "osx" ]; then
    git submodule init;
    git submodule update;
    mkdir build;
    cd build;
    qmake ..;
    make || travis_terminate 1;
    find .;
    wget https://github.com/bluerobotics/stm32flash-code/releases/download/continuous/stm32flash_osx.zip;
    unzip stm32flash_osx.zip;
    chmod +x stm32flash;
    mv stm32flash pingviewer.app/;
    macdeployqt pingviewer.app/ -qmldir=../qml -dmg;
  fi

after_success:
- export DEPLOY_FILE="";
- if [ -z $TEST ]; then
    wget -c https://github.com/probonopd/uploadtool/raw/master/upload.sh;
  fi
- if [ ! -z $TRAVIS_BRANCH ] && [ "$TRAVIS_BRANCH" != "master" ] ; then
    export UPLOADTOOL_SUFFIX=$TRAVIS_BRANCH;
  fi
- if [[ "${TRAVIS_OS_NAME}" = "linux" && -z $TEST ]]; then
    bash ./upload.sh ./pingviewer*.AppImage;
    export DEPLOY_FILE=${PWD}/pingviewer*.AppImage;
  fi
- if [ "${TRAVIS_OS_NAME}" = "osx" ]; then
    bash ./upload.sh pingviewer*.dmg*;
    export DEPLOY_FILE=${PWD}/pingviewer.dmg;
  fi
- echo "Deploy: ${DEPLOY_FILE}";
- mkdir -p /tmp/deploy/s3;
- mv ${DEPLOY_FILE} /tmp/deploy/s3;
- echo "S3 folder";
- ls /tmp/deploy/s3/*;

deploy:
  # deploy installers to s3 builds/ if on a branch
  - provider: s3
    access_key_id: AKIAI42TETMLX6KJRTRA
    secret_access_key:
      secure: sWhs8EH+S49EOmQGVFmnN2aaFegrdahNO7hjUSVLR3jwwjJYEEvzJEXd2wQg1LzkP6l7IBt8B+q8rHNiX9lwXUW11X0BVsrAz6vo1V99usnknvTIW+em6lWGGQcd1LZnrUWPwHhK/+7tmD/7crNuxxKsdiYqDLyP8AdvNwhK+/WzQj6zoBOhE++F5fKi52UK9glM15Zk30t8Ng0qmub1+zaPJwO1FPIR+hcAesxGDDplVSDQIiOZ4SqgYmC7u26HpcfsOXLS8YQdQwHOk6K+fNgrOc3MbdP0kE2W21SeVGNOVZaLsy6fAnZEdaJQcX1bkCFVgilcsyf5zppNuh0HFoNF4OpG9oDYQFYBkR0iDYnqXw89raqovW5N6hbsV4K6PN9/vLgk6KTuP5jpoIwvmGSYiPPXvgE26/agNMkEeJnwv/aa1QAABKX3A6XYylN9brmBUFE3xL5DyY2L0nH1q1KdtH+iOUpPRYnMkDNenPwbqlx2QC66pz06+IzYG4n1nRfTq4D23CsPud2W7dhsPg1ZWVxKkDS5rTHlIgpbWoj22jAJmwS48XVD98R0CoNsbsFCAPd6BMiciGirsyIRTtfJai25YbkJ+YDwrhzu/r8V9hpnjGc2PiwetXTnaPz8OOWmPgTGclNZD8FhdJwWPhnBMR56CT3ZxL5Sg3f4Ba4=
    bucket: downloads.bluerobotics.com
    upload-dir: PingViewer/builds/${TRAVIS_BRANCH}
    acl: public_read
    region: us-east-1
    file_glob: true
    local_dir: /tmp/deploy/s3/
    file:
      - /tmp/deploy/s3/*
    skip_cleanup: true
    on:
      all_branches: true
      condition: ${DEPLOY_FILE} != ""
